###################################################################################################
###################################################################################################
###         tmux Configuration
###
###     Author: Stanley Chan
###     Github: https://github.com/Happy-Dude
###     Version: 12 April 2012
###
### Based on configurations from:
###	Eric Harmon:		https://github.com/eharmon
###	Seth Brown:		http://www.drbunsen.org/text-triumvirate.html
###	Brandur:		http://mutelight.org/articles/practical-tmux
###	Cody:			http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
###	Alex Young:		http://alexyoung.org/2011/12/19/build-an-ide-with-tmux-and-vim/
###	Justin Lilly:		http://justinlilly.com/dotfiles/tmux.html
###	Seth Brown:		http://www.drbunsen.org/text-triumvirate.html
###	Wincent Colaiuta:	https://wincent.com/blog/tweaking-command-t-and-vim-for-use-in-the-terminal-and-tmux
###	Thoughtbot:		http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
###	Thoughtbot:		http://robots.thoughtbot.com/post/2166174647/love-hate-tmux & http://robots.thoughtbot.com/post/2641409235/a-tmux-crash-course
###	Evert Pot:		http://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
###
### Patch for OS X terminal pasteboard service
###	tmux-MacOSX-pasteboard:	https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
###
###################################################################################################
###################################################################################################

### Character pair to replace with
# #(shell-command) First line of the command’s output
# #[attributes] Colour or attribute change
# #H Hostname of local host
# #F Current window flag
# #I Current window index
# #P Current pane index
# #S Session name
# #T Current window title
# #W Current window name
# ## A literal ‘#’

### Color Scheme Designer suggestions: http://colorschemedesigner.com/
### Eric's #1B7CE0 as the base color
##### ##### ##### ##### ##### ##### #####
##### ##### Blue Background (Active Window)
#####   [#1B7CE0] [#3970A8] [#094C92] [#529FF0] [#7CB4F0]
#####
##### ##### Triad Colors:
##### Darker Orange (Statusbar Right)
#####   [#FF5E0C] [#BF6537] [#A63A04] [#FF8649] [#FFA679]
##### Lighter Yellow
#####   [#FFC70C] [#BFA037] [#A68104] [#FFD549] [#FFE079]
#####
##### ##### Accented Analogic Colors:
##### Complement Orange
#####   [#FF9E0C] [#BF8837] [#A66504] [#FFB649] [#FFC979]
##### Secondary Blue
#####   [#3729E4] [#4A42AB] [#170D94] [#685DF2] [#8D85F2]
##### Secondary Orange
#####   [#FFC70C] [#BFA037] [#A68104] [#FFD549] [#FFE079]
##### Analogic (Green) (039264 - Statusbar Left)
#####   [#0BE19B] [#30A981] [#039264] [#45F0B8] [#72F0C7]
#####
##### ##### ##### ##### ##### ##### #####
##### ##### Silvery-White Text (Active Window)
#####   [#1CCCCC] [#999999] [#854242] [#E5E5E5]
#####
##### ##### Triad Colors:
##### Grey-White (Statusbar Right)
#####   [#7A7A7A] [#5C5C5C] [#285050] [#BDBDBD]
##### Dimmed-Silvery White
#####   [#BEBEBE] [#8F8F8F] [#677C3E] [#DFDFDF]
#####
##### ##### Accented Analogic Colors:
##### Complement Light-Grey
#####   [#A3A3A3] [#7A7A7A] [#356A35] [#D1D1D1]
##### Secondary Silvery-White
#####   [#1CCCCC] [#999999] [#856042] [#E5E5E5]
##### Analogic (Grey) (D1D1D1 - Statusbar Left)
#####   [#A3A3A3] [#7A7A7A] [#356A35] [#D1D1D1]


# Set the default terminal string
set-option -g default-terminal "screen-256color"

# Chris Toomey's tmux Copy and Paste on OS X settings
# Vi(m)-like keybindings; movements bounded to hjkl
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Chris Johnsen's OS X terminal application patch/wrapper
#set -g default-command "reattach-to-user-namespace -l zsh"

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
#bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -Tcopy-mode-vi 'Enter'
#bind-key -Tcopy-mode-vi 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
#bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Rebind action key; default is C-b
# Compromise: C-b is used by certain apps like VIM; C-q should be okay...
#set-option -g prefix C-a
set-option -g prefix C-q
unbind-key C-b
bind-key C-q send-prefix

# Enable titles and configure them
set-option -g set-titles on
set-option -g set-titles-string "#(whoami)@#H: #(echo $PWD) \"#S\" (#W)#F [#I:#P]"

# Agressive resize
set-window-option -g aggressive-resize on

# Faster command sequences; tmux waits for an escape sequence -- get rid of it
# Realization: with action key mapped to capitals, its hard to follow up gracefully...
# neovim uses libtermkey to parse keys -- alt key combinations are detected
# Set lower escape-time to prevent tmux from sending literal alt keys to vim
# Default = 500ms; change to 50ms
set-option -sg escape-time 50

# Let's get 10,000 lines of history
set-option -g history-limit 100000

# Set the lock command to a "screensaver" of sorts (start with lock-server command)
set-option -g lock-command "read -p 'Someone else has attached to this terminal, and you have been detached. Press any key to reattach.'"

# Allow xterm scrollback, while keeping the standard tmux overrides
set-option -g terminal-overrides "xterm*:smcup@:rmcup@,*88col*:colors=88,*256col*:colors=256,xterm*:XT"

# Set the statusbar options
#set-option -g status-utf8               # Statusbar in UTF-8 -- unnecessary in v2.2
set-option -g status-interval 60        # Redraw statusbar every 60 seconds; default is 15
set-option -g status-bg "#cccccc"       # Eric's pretty colors
set-option -g message-style bg="#cccccc"
set-option -g status-left "#[fg=#d1d1d1,bg=#039264]|\"#S\"|#[fg=#cccccc,bg=#333333,bold]#[default]"     # Set left information text of statusbar; Display hostname of localhost
set-option -g status-right "#[fg=#bebebe,bg=#ff5e0c]|#(whoami)@#H|#[default]"     # Set left information text of statusbar; Display hostname of localhost
set-option -g status-right-length 48    # Maximum characters to display on right info: 48
set-option -g status-left-length 96     # Maximum characters to display on left info: 96

# Set the window styles in the status
#set-window-option -g utf8 on                                    # Enable UTF-8 -- unnecessary in v2.2
set-window-option -g window-status-format " #W[#I:#P]#F "       # Window [number : pane] Flag
set-window-option -g window-status-current-format " #W[#I:#P] " # Window [number : pane]
set-window-option -g window-status-current-style bold,fg="#ffffff",bg="#1b7ae0" # Eric's pretty colors

# Set window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Clock settings; cyan looks nice with colorscheme and 24-hour mode makes the days look longer :)
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# Set window title automatically
set-window-option -g automatic-rename

# Shut off automatic window naming, we're handling this in zsh (and better)
#set-window-option -g automatic-rename off
### Stan: we're not ready for this yet... My zsh learning is not complete [~_~]...

# Rebind pane split shortcuts
unbind %                    # Remove default binding for splitting vertically
unbind '"'                  # Remove default binding for splitting horizontally

# New window with default path set to last path
bind-key - split-window -v -c "#{pane_current_path}"  # Horizontal split
bind-key | split-window -h  -c "#{pane_current_path}" # Vertical split
bind c new-window -c "#{pane_current_path}"

# Enable mouse support
set-option -g -q mouse on                       # Allow mouse to enter copy mode and initiate selection
#set-option -g -q mouse-utf8 on                  # Scrollwheel works in VIM with this option? -- unnecessary in v2.2
#set-window-option -g mouse-select-window on     # Select windows (by clicking in the status bar)
#set-window-option -g mouse-select-pane on       # Select panes
#set-window-option -g mouse-resize-pane on       # Resize panes (by dragging dividers)

# Eric's bindings with Meta key -- need to find out more about this; maybe I won't have conflicts..?
# Key bindings
# M = option with Terminal.app set to 'Use option as meta key', this prevents stomping most application's shortcuts
#bind-key -n -r M-p      previous-window
#bind-key -n -r M-n      next-window
#bind-key -n -r M-s      new-window
